@page
@model TableauWeb.Images.CreateModel

<div class="container-fluid">
    <a asp-page="Index">
        <i class="fa fa-arrow-left" aria-hidden="true"></i> Retour
    </a>
</div>

<div class="container-fluid">
    <div class="jumbotron">
        <form method="post" class="needs-validation" enctype="multipart/form-data" asp-controller="UploadFiles" asp-action="Index">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <p>Image</p>
                <input type="file" name="file" lang="fr-fr" accept=".jpg, .jpeg, .png" title="Test " />
            </div>

            <div class="form-group">
                <label asp-for="ImageTableau.Nom" class="control-label"></label>
                <input asp-for="ImageTableau.Nom" class="form-control" required />
                <span asp-validation-for="ImageTableau.Nom" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div>
                    <label asp-for="ImageTableau.MaxImpression" class="control-label"></label>
                    <input asp-for="ImageTableau.MaxImpression" class="form-control" type="number" id="replyNumber" min="0" step="1" value="10" data-bind="value:replyNumber" />
                </div>
            </div>

            <div class="form-group">
                <div class="ml-auto">
                    <button class="btn ml-auto"><i class="fa fa-plus" aria-hidden="true"></i> Ajouter</button>
                </div>
            </div>


        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}